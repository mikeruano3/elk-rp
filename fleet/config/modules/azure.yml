# Module: azure
# Docs: https://www.elastic.co/guide/en/beats/filebeat/8.2/filebeat-module-azure.html

- module: azure
  # All logs
  activitylogs:
    enabled: true
    var:
      # eventhub name containing the activity logs, overwrite he default value if the logs are exported in a different eventhub
      eventhub: "${EVENT_HUB_NAME}"
      # consumer group name that has access to the event hub, we advise creating a dedicated consumer group for the azure module
      consumer_group: "$Default"
      # the connection string required to communicate with Event Hubs, steps to generate one here https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string
      connection_string: "${EVENT_HUB_CONN_STRING}"
      # the name of the storage account the state/offsets will be stored and updated
      storage_account: "${STORAGE_ACCOUNT_NAME}"
      # the name of the storage account container you would like to store the offset information in.
      #storage_account_container: "${STORAGE_ACCOUNT_CONN_STRING}"
      # the storage account key, this key will be used to authorize access to data in your storage account
      storage_account_key: "${STORAGE_ACCOUNT_KEY}"

  platformlogs:
    enabled: false
    var:
      # eventhub name containing the activity logs, overwrite he default value if the logs are exported in a different eventhub
      eventhub: "${EVENT_HUB_NAME}"
      # consumer group name that has access to the event hub, we advise creating a dedicated consumer group for the azure module
      consumer_group: "$Default"
      # the connection string required to communicate with Event Hubs, steps to generate one here https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string
      connection_string: "${EVENT_HUB_CONN_STRING}"
      # the name of the storage account the state/offsets will be stored and updated
      storage_account: "${STORAGE_ACCOUNT_NAME}"
      # the name of the storage account container you would like to store the offset information in.
      #storage_account_container: "${STORAGE_ACCOUNT_CONN_STRING}"
      # the storage account key, this key will be used to authorize access to data in your storage account
      storage_account_key: "${STORAGE_ACCOUNT_KEY}"


  auditlogs:
    enabled: true
    var:
      # eventhub name containing the activity logs, overwrite he default value if the logs are exported in a different eventhub
      eventhub: "${EVENT_HUB_NAME}"
      # consumer group name that has access to the event hub, we advise creating a dedicated consumer group for the azure module
      consumer_group: "$Default"
      # the connection string required to communicate with Event Hubs, steps to generate one here https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string
      connection_string: "${EVENT_HUB_CONN_STRING}"
      # the name of the storage account the state/offsets will be stored and updated
      storage_account: "${STORAGE_ACCOUNT_NAME}"
      # the name of the storage account container you would like to store the offset information in.
      #storage_account_container: "${STORAGE_ACCOUNT_CONN_STRING}"
      # the storage account key, this key will be used to authorize access to data in your storage account
      storage_account_key: "${STORAGE_ACCOUNT_KEY}"

  signinlogs:
    enabled: true
    var:
      # eventhub name containing the activity logs, overwrite he default value if the logs are exported in a different eventhub
      eventhub: "${EVENT_HUB_NAME}"
      # consumer group name that has access to the event hub, we advise creating a dedicated consumer group for the azure module
      consumer_group: "$Default"
      # the connection string required to communicate with Event Hubs, steps to generate one here https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string
      connection_string: "${EVENT_HUB_CONN_STRING}"
      # the name of the storage account the state/offsets will be stored and updated
      storage_account: "${STORAGE_ACCOUNT_NAME}"
      # the name of the storage account container you would like to store the offset information in.
      #storage_account_container: "${STORAGE_ACCOUNT_CONN_STRING}"
      # the storage account key, this key will be used to authorize access to data in your storage account
      storage_account_key: "${STORAGE_ACCOUNT_KEY}"